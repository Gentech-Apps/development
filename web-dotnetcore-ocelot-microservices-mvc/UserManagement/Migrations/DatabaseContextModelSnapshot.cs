// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagement.database;

#nullable disable

namespace UserManagement.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserManagement.database.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("08dc5678-b5b0-40f0-8ba1-1a3ed088f978"),
                            CompanyName = "Test Company Ltd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = new Guid("08db29d3-40d0-4898-858a-b279d3144b82")
                        },
                        new
                        {
                            CompanyId = new Guid("08fe0990-b5b0-40f0-8ba1-1a3ed01a5d6f"),
                            CompanyName = "Test Company Ltd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OwnerId = new Guid("08db29d2-b133-4cf8-805e-4f63083effca")
                        });
                });

            modelBuilder.Entity("UserManagement.database.OTPVerifications", b =>
                {
                    b.Property<Guid>("OTPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OPT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OTPId");

                    b.ToTable("OTPVerifications");
                });

            modelBuilder.Entity("UserManagement.database.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPhoneNoVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("08db29d2-b133-4cf8-805e-4f63083effca"),
                            Email = "admin@sre.com",
                            IsActive = true,
                            IsPhoneNoVerified = true,
                            PasswordHash = "4S4FM9oK1TX8+FfwRQQ1e3zNZBQ56DS95dlARY4xhFE=",
                            PasswordSalt = "kBVsQEMksvH1P58ZOIHa1g==",
                            Role = "admin"
                        },
                        new
                        {
                            UserId = new Guid("08db29d3-40d0-4898-858a-b279d3144b82"),
                            Email = "test1@sre.com",
                            IsActive = true,
                            IsPhoneNoVerified = true,
                            PasswordHash = "4S4FM9oK1TX8+FfwRQQ1e3zNZBQ56DS95dlARY4xhFE=",
                            PasswordSalt = "kBVsQEMksvH1P58ZOIHa1g==",
                            Role = "landlord"
                        },
                        new
                        {
                            UserId = new Guid("08db29d3-b5b0-40f0-8ba1-e71ac088f927"),
                            Email = "test2@sre.com",
                            IsActive = true,
                            IsPhoneNoVerified = true,
                            PasswordHash = "4S4FM9oK1TX8+FfwRQQ1e3zNZBQ56DS95dlARY4xhFE=",
                            PasswordSalt = "kBVsQEMksvH1P58ZOIHa1g==",
                            Role = "landlord"
                        });
                });

            modelBuilder.Entity("UserManagement.database.UsersInfo", b =>
                {
                    b.Property<int>("UserinfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsMobileVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImageURL")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ReceiveNotificationOnEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("ReceiveNotificationOnSMS")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserinfoId");

                    b.ToTable("UsersInfo");

                    b.HasData(
                        new
                        {
                            UserinfoId = 1,
                            FirstName = "Admin",
                            LastName = "Admin",
                            Mobile = "",
                            ProfileImageURL = "",
                            UserId = new Guid("08db29d2-b133-4cf8-805e-4f63083effca")
                        },
                        new
                        {
                            UserinfoId = 2,
                            FirstName = "Test",
                            LastName = "User1",
                            Mobile = "+11111111111",
                            ProfileImageURL = "",
                            UserId = new Guid("08db29d3-40d0-4898-858a-b279d3144b82")
                        },
                        new
                        {
                            UserinfoId = 3,
                            FirstName = "Test",
                            LastName = "User2",
                            Mobile = "+12222222222",
                            ProfileImageURL = "",
                            UserId = new Guid("08db29d3-b5b0-40f0-8ba1-e71ac088f927")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
