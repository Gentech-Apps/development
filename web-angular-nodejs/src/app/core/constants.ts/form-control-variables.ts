import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root',
})
export class FormControlVariables {
  id: string = 'id';
  firstName: string = 'firstName';
  lastName: string = 'lastName';
  driveId: string = 'driveId';
  areaOfInterestId: string = 'areaOfInterestId';
  email: string = 'email';
  mobile: string = 'mobileNumber';
  password: string = 'password';
  date: string = 'date';
  time: string = 'time';
  keyword: string = 'keyword';
  stageId: string = 'stageId';
  driveName: string = 'driveName';
  registrationIP: string = 'registrationIP';
  loginIP: string = 'loginIP';
  criteria: string = 'criteria';
  driveStartTime: string = 'driveStartTime';
  driveEndTime: string = 'driveEndTime';
  driveDate: string = 'driveDate';
  agoraStatus: string = 'agoraStatus';
  timeSlot: string = 'timeSlot';
  waitingTimeForPaperListPage: string = 'waitingTimeForPaperListPage';
  waitingTimeForInstructionsPage: string = 'waitingTimeForInstructionsPage';
  areaOfInterest: string = 'areaOfInterest';
  profile: string = 'profile';
  resume: string = 'resume';
  qualification: string = 'qualification';
  otherQualification: string = 'otherQualification';
  whatsappNumber: string = 'whatsappNumber';
  location: string = 'location';
  source: string = 'source';
  paper: string = 'paper';
  cutOffMarks: string = 'cutOffMarks';
  autoCutOffMarks: string = 'autoCutOffMarks';
  selectedEmailTemplate: string = 'selectedEmailTemplate';
  selectedMessageTemplate: string = 'selectedMessageTemplate';
  feedback: string = 'feedback';
  stageOutcome: string = 'stageOutcome';
  userType: string = 'userType';
  scheduleStatus: string = 'scheduleStatus';
  firstInterviewer: string = 'firstInterviewer';
  secondInterviewer: string = 'secondInterviewer';
  thirdInterviewer: string = 'thirdInterviewer';
  contact: string = 'contact';
  subject: string = 'subject';
  outcomeId: string = 'outcomeId';
  templateName: string = 'templateName';
  templateContent: string = 'templateContent';
  interviewerList: string = 'interviewerList';
  sendScheduleMail: string = 'sendScheduleMail';
  finalResult: string = 'finalResult';
  interviewerId: string = 'interviewerId';
  interviewer: string = 'interviewer';
  comment: string = 'comment';
  reschduleStageName: string = 'reschduleStageName';
  cutoffMarks: string = 'cutoffMarks';
  autoCutoffMarks: string = 'autoCutoffMarks';
  pattern: string = 'pattern';
  paperType: string = 'paperType';
  categoryName: string = 'categoryName';
  contactNumber: string = 'contactNumber';
  fieldOfInterest: string = 'fieldOfInterest';
  user: string = 'user';
  photo: string = 'photo';
  examineeDriveId: string = 'examineeDriveId';
  IP: string = 'IP';
  tnc: string = 'tnc';
  generatePasswordButton: string = 'generatePasswordButton';
  drive: string = 'drive';
  examType: string = 'examType';
  fromDate: string = 'fromDate';
  toDate: string = 'toDate';
  userStatus: string = 'userStatus';
  registrationType: string = 'registrationType';
  status: string = 'status';
  remark: string = 'remark';
}
